from flask import Flask, request, jsonify
import gspread
from oauth2client.service_account import ServiceAccountCredentials
from datetime import datetime
import os
import json

app = Flask(__name__)

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ —Å Google API
scope = [
    "https://spreadsheets.google.com/feeds",
    "https://www.googleapis.com/auth/spreadsheets",
    "https://www.googleapis.com/auth/drive.file",
    "https://www.googleapis.com/auth/drive"
]

# –ü–æ–ª—É—á–µ–Ω–∏–µ –∫–ª—é—á–µ–π –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è
json_str = os.environ.get("GSPREAD_CREDENTIALS")
if not json_str:
    raise Exception("–ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –æ–∫—Ä—É–∂–µ–Ω–∏—è GSPREAD_CREDENTIALS –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞!")
creds_dict = json.loads(json_str)
creds = ServiceAccountCredentials.from_json_keyfile_dict(creds_dict, scope)
client = gspread.authorize(creds)

# –û—Ç–∫—Ä—ã–≤–∞–µ–º —Ç–∞–±–ª–∏—Ü—É –∏ –ª–∏—Å—Ç
SPREADSHEET_ID = "12lJZgUKecjmGH4BJSIbfDhpDdwMSkpD-IeXzunAu5Tc"
SHEET_NAME = "Forex"
sheet = client.open_by_key(SPREADSHEET_ID).worksheet(SHEET_NAME)

# üîß –†–æ—É—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–µ—Ä–≤–µ—Ä–∞
@app.route("/", methods=["GET"])
def index():
    return "üßôüèæ MT4 Proxy is alive", 200

# üì¨ –†–æ—É—Ç –¥–ª—è –ø—Ä–∏—ë–º–∞ –¥–∞–Ω–Ω—ã—Ö –æ—Ç MT4
@app.route("/send", methods=["POST"])
def receive_mt4_data():
    try:
        data = request.get_json(force=True)
        print("‚úÖ –î–∞–Ω–Ω—ã–µ –æ—Ç MT4:", data)

        timestamp = datetime.now().strftime("%Y-%m-%d %H:%M:%S")

        row = [
            data.get("account"),
            data.get("balance"),
            data.get("equity"),
            data.get("profit"),
            data.get("drawdown"),
            timestamp
        ]
        sheet.append_row(row)

        return jsonify({"status": "success", "message": "–î–∞–Ω–Ω—ã–µ –∑–∞–ø–∏—Å–∞–Ω—ã"}), 200

    except Exception as e:
        print("‚õî –û—à–∏–±–∫–∞:", str(e))
        return jsonify({"status": "error", "message": str(e)}), 500

# üöÄ –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞ –Ω–∞ –ø–æ—Ä—Ç—É –æ—Ç Render
if __name__ == "__main__":
    port = int(os.environ.get("PORT", 5000))
    app.run(host="0.0.0.0", port=port)
